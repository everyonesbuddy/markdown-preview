{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","state","markdown","updateMarkdown","this","setState","className","controlId","FormControl","type","componentClass","placeholder","value","onChange","event","target","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAOIA,EAASC,EAAQ,IAgCNC,E,4MA5BbC,MAAQ,CACNC,SAAU,I,EAGZC,eAAiB,SAAUD,GACzBE,KAAKC,SAAS,CAACH,c,4CAGnB,WAAS,IAAD,OACDA,EAAYE,KAAKH,MAAjBC,SAEL,OACE,sBAAKI,UAAU,gBAAf,UACE,8BACE,eAAC,IAAD,CAAWC,UAAW,wBAAtB,UACE,cAAC,IAAD,6BACA,cAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,eAAe,WAAWC,YAAY,iBAAiBC,MAAOV,EAAUW,SAAU,SAACC,GAAD,OAAW,EAAKX,eAAeW,EAAMC,OAAOH,eAG3J,gCACE,iDACA,8BAAMd,EAAOI,e,GAvBHc,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fbae5919.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport FromGroup from 'react-bootstrap/FormGroup';\nimport ControlLabel from 'react-bootstrap/FormLabel';\nimport FormControl from 'react-bootstrap/FormControl';\n\n\nlet marked = require(\"marked\");\n\nclass App extends Component {\n\n  state = {\n    markdown: \"\"\n  }\n\n  updateMarkdown = function (markdown) {\n    this.setState({markdown});\n  }\n\nrender(){\n  let {markdown} = this.state;\n\n  return (\n    <div className=\"App container\">\n      <div>\n        <FromGroup controlId= \"formControlIsTextarea\">\n          <ControlLabel>Markdown Input</ControlLabel>\n          <FormControl type=\"text\" componentClass=\"textarea\" placeholder=\"Enter Markdown\" value={markdown} onChange={(event) => this.updateMarkdown(event.target.value)} />\n        </FromGroup>\n      </div>\n      <div>\n        <h1>Markdown output</h1>\n        <div>{marked(markdown)}</div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}